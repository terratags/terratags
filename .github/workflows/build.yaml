name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel in-progress runs when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Build binary
      run: |
        mkdir -p bin
        COMMIT_SHA=$(git rev-parse --short HEAD)
        go build -ldflags "-X main.version=dev-${COMMIT_SHA}" -o bin/terratags .
        chmod +x bin/terratags

    - name: Upload artifact
      uses: actions/upload-artifact@v5
      with:
        name: terratags
        path: bin/terratags
  
  test-examples:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: provider_default_tags
            expected_results: 0
          - name: module_blocks
            expected_results: 1
          - name: resource_blocks
            expected_results: 1
          - name: awscc_tags
            expected_results: 0
          - name: mixed_blocks
            expected_results: 0
          - name: azurerm_tags
            expected_results: 1
          - name: azapi_tags
            expected_results: 0
          - name: azapi-failure
            expected_results: 1
          - name: azurerm-no-tags
            expected_results: 0
          - name: azurerm-passing
            expected_results: 0
          - name: google_labels
            expected_results: 1
          - name: google_passing
            expected_results: 0
          - name: pattern_validation_passing
            expected_results: 0
            config: config-patterns.yaml
          - name: pattern_validation_failing
            expected_results: 1
            config: config-patterns.yaml
          - name: plan_validation
            expected_results: 0
            plan: plan.json

    steps:
    - uses: actions/checkout@v5
    
    - name: Download terratags binary
      uses: actions/download-artifact@v5
      with:
        name: terratags
        path: bin
    
    - name: Make binary executable
      run: chmod +x bin/terratags
    
    - name: Make test script executable
      run: chmod +x ./.github/scripts/test_examples.sh
    
    - name: Test example
      run: ./.github/scripts/test_examples.sh ${{ matrix.name }} ${{ matrix.expected_results }} ${{ matrix.config || 'config.yaml' }} ${{ matrix.plan || '' }}
